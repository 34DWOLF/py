# =======================================
# STEP 1: Imports
# =======================================
import pandas as pd
import numpy as np
from pycaret.time_series import TSForecastingExperiment
from sklearn.inspection import permutation_importance
from joblib import Parallel, delayed
import warnings
warnings.filterwarnings("ignore")

# =======================================
# STEP 2: Load & Prepare Data
# =======================================
# Example dataset â€” replace with your actual data
df = pd.DataFrame({
    'Date': pd.date_range(start='2015-01-01', periods=100, freq='MS'),
    'A': np.linspace(0, 100, 100) + np.random.normal(0, 5, 100),
    'B': np.linspace(10, 110, 100) + np.random.normal(0, 2, 100),
    'C': np.linspace(5, 105, 100),
    'D': np.linspace(2, 102, 100),
    'E': np.linspace(50, 150, 100),
    'F': np.linspace(80, 180, 100),
})

df['Date'] = pd.to_datetime(df['Date'])
df = df.sort_values('Date').set_index('Date')
df = df.asfreq('MS')

# Define target and regressors
target_col = 'A'
regressors = ['B', 'C', 'D', 'E', 'F']
forecast_horizon = 12
target_mean = df[target_col].mean()

# Separate target and regressor DataFrames
y_df = df[[target_col]]
X_df = df[regressors]

# =======================================
# STEP 3: Setup PyCaret Time Series
# =======================================
exp = TSForecastingExperiment()
exp.setup(
    data=y_df,
    X=X_df,
    fh=forecast_horizon,
    session_id=42,
    fold_strategy='sliding',
    numeric_imputation_target='ffill',
    numeric_imputation_exogenous='ffill',
    enforce_exogenous=True,
    verbose=True
)

# =======================================
# STEP 4: AutoML Model Comparison + nRMSE
# =======================================
best_model = exp.compare_models(sort='RMSE')
leaderboard = exp.pull()
leaderboard['nRMSE'] = leaderboard['RMSE'] / target_mean

print("\n=== MODEL LEADERBOARD WITH nRMSE ===")
print(leaderboard[['Model', 'RMSE', 'nRMSE', 'MAE', 'MAPE', 'R2']])

# Finalize the best model
final_model = exp.finalize_model(best_model)