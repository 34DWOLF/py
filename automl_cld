import pandas as pd
from pmdarima import auto_arima
from dateutil.relativedelta import relativedelta

def forecast_open_counts(df, forecast_horizon=6):
    """
    Forecasts open_count for each use case using AutoARIMA.
    
    Parameters
    ----------
    df : pd.DataFrame
        Must contain columns: ['use_case', 'month', 'open_count', 'closed_count'].
        'month' should be convertible to datetime.
    forecast_horizon : int
        Number of months to forecast forward (default = 6).
        
    Returns
    -------
    pd.DataFrame
        A DataFrame with use_case, forecast_month, and forecast_open_count.
    """

    # Ensure month column is datetime
    df['month'] = pd.to_datetime(df['month'])

    results = []

    # Loop over each use case
    for use_case, group in df.groupby('use_case'):
        group = group.sort_values('month')

        # Extract the open counts
        y = group['open_count']

        # Fit AutoARIMA
        model = auto_arima(
            y,
            seasonal=True,
            m=12,   # monthly seasonality
            stepwise=True,
            suppress_warnings=True,
            error_action="ignore"
        )

        # Forecast
        forecast = model.predict(n_periods=forecast_horizon)

        # Build forecast months
        last_month = group['month'].max()
        forecast_months = [last_month + relativedelta(months=i+1) for i in range(forecast_horizon)]

        # Collect results
        use_case_results = pd.DataFrame({
            'use_case': use_case,
            'forecast_month': forecast_months,
            'forecast_open_count': forecast
        })

        results.append(use_case_results)

    return pd.concat(results, ignore_index=True)


# Example usage:
# df = pd.DataFrame({
#     "use_case": ["a","a","a","b","b","b"],
#     "month": ["2024-01-01","2024-02-01","2024-03-01","2024-01-01","2024-02-01","2024-03-01"],
#     "open_count": [10, 12, 14, 20, 18, 19],
#     "closed_count": [5, 6, 7, 8, 7, 9]
# })
#
# forecast_df = forecast_open_counts(df, forecast_horizon=6)
# print(forecast_df)
