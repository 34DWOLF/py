def make_robust_arima_predictions(model_uri, run_id, n_forecast_periods=1):
    """
    Monthly forecast - typically just one month at a time
    """
    loaded_model = mlflow.pyfunc.load_model(model_uri)
    
    # Get date info from parameters
    client = mlflow.tracking.MlflowClient()
    run = client.get_run(run_id)
    last_training_date = pd.to_datetime(run.data.params["last_training_date"])
    
    # Calculate start and end dates for monthly prediction
    # Start: first day of next month after training
    start_date = (last_training_date + pd.DateOffset(months=1)).replace(day=1)
    
    # End: last day of the same month (for n_forecast_periods months)
    end_date = start_date + pd.DateOffset(months=n_forecast_periods) - pd.Timedelta(days=1)
    
    # Create input DataFrame with expected schema
    input_data = pd.DataFrame({
        'start': [start_date],
        'end': [end_date]
    })
    
    # Make prediction
    forecast = loaded_model.predict(input_data)
    
    # Create monthly date index for output
    forecast_dates = pd.date_range(
        start=start_date,
        periods=n_forecast_periods,
        freq='MS'  # Month Start frequency
    )
    
    return pd.DataFrame({'forecast': forecast.flatten()}, index=forecast_dates)

# Usage - forecast next month
predictions = make_robust_arima_predictions(
    model_uri="runs:/<run_id>/arima_model",
    run_id="<run_id>",
    n_forecast_periods=1  # Just one month
)

# Or if you want multiple months
predictions_3_months = make_robust_arima_predictions(
    model_uri="runs:/<run_id>/arima_model", 
    run_id="<run_id>",
    n_forecast_periods=3
)
