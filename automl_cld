def arima_forecasts(model_uri, run_id, n_forecast_periods=1):
    """
    Monthly forecast using model's known date range
    """
    loaded_model = mlflow.pyfunc.load_model(model_uri)
    
    # Get date info from parameters
    client = mlflow.tracking.MlflowClient()
    run = client.get_run(run_id)
    last_training_date = pd.to_datetime(run.data.params["last_training_date"])
    
    # Use the last training date (which the model knows about)
    # and forecast from there
    start_date = last_training_date  # 2025-08-01 (model knows this date)
    end_date = start_date + pd.DateOffset(months=n_forecast_periods)
    
    input_data = pd.DataFrame({
        'start': [start_date],
        'end': [end_date]
    })
    
    forecast = loaded_model.predict(input_data)
    
    # Create output index for the forecasted periods
    # Start from the next month after training
    forecast_start = last_training_date + pd.DateOffset(months=1)  # 2025-09-01
    forecast_dates = pd.date_range(
        start=forecast_start,
        periods=n_forecast_periods,
        freq='MS'
    )
    
    return pd.DataFrame({'forecast': forecast.flatten()}, index=forecast_dates)

# Usage - this should forecast for September 2025
predictions = arima_forecasts(
    model_uri="runs:/<run_id>/arima_model",
    run_id="<run_id>",
    n_forecast_periods=1
)
