def debug_model_dates(model_uri, run_id):
    """
    Debug what dates the model actually has in its index
    """
    # Load the underlying model to inspect its date index
    import mlflow
    
    # Try to get the original model (not pyfunc wrapper)
    run = mlflow.tracking.MlflowClient().get_run(run_id)
    
    # Download and inspect the model artifacts
    artifact_path = mlflow.tracking.MlflowClient().download_artifacts(run_id, "arima_model")
    
    print(f"Model artifacts location: {artifact_path}")
    
    # Also check what the last few dates in training were
    last_training_date = pd.to_datetime(run.data.params["last_training_date"])
    print(f"Last training date from params: {last_training_date}")
    
    # Try a range around that date
    test_dates = pd.date_range(
        start=last_training_date - pd.DateOffset(months=2),
        end=last_training_date + pd.DateOffset(months=2),
        freq='MS'
    )
    
    print("Test date range around last training date:")
    for date in test_dates:
        print(f"  {date}")

# Run this first to see what dates are available
debug_model_dates(model_uri="runs:/<run_id>/arima_model", run_id="<run_id>")
